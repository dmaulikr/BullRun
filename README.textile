h1. Current State

Unit lookup data is complete; you can tap on a square and the unit's name, portrait, mode,
and original strength show up in the info box.

Units are configured in units.plist.

Map geometry, zones, terrain data, and terrain effects are read from map.plist.  (Terrain can be verified only through the log window.)

You can click the [USA] and [CSA] buttons to switch sides, and the sighting works correctly.

You can drag out orders for units; the line is in the unit's color. Backing up works.  Double tapping cancels
current orders.  Orders for other units show up, dimmed.  Order lines have arrow heads.

Mode menu button shows up and actually sets the unit's mode. Wrecked units can only choose Defend and Withdraw.

Info box can be swapped between upper right and lower left corners.

Moving into an enemy hex in an attack mode launches an attack, with a primitive animation.  Casualties are assigned and show up
in the Info box. Retreats and advances work.

h1. To Do

h3. UI/Art
* Real map
* App Icons
* Unit Icons
* Attack animations (smoke?)
* Portraits for Militia + Volunteers

h3. Functionality
* Touching outside hex area should show status bar
* OOB needs reinforcement information
* Game#takeCasualties to reset attack mode when wrecked
* Real attack/advance/retreat animations
* May need to differentiate between a unit being "sighted" (i.e. enemy can see) vs "visible" (i.e. user can see)
* Sighting calculations happen when an animation begins, instead of when it ends.  Need to move sighting calculation
  into animation completion methods, which implies a new public method in BAGame.

h3. Organization
* Differentiate between BR-specific files (Terrain, BullRun.h) and Battle@ framework files (Board, Game, Unit)
* add "friend" and "enemies" as methods in OrderOfBattle, use in Game#sighting
* probably should have a controller for InfoBarView
* Util files needs prefix; BA? WFB? DPT?

h3. Bugs
* Must guard against user dragging fast enough that move orders end up with non-adjacent hexes
* Trying to enter an impossible hex lets unit accumulate a crazy number of MPs

h3. Tools
* Map ASCII => plist compiler
* Unit ASCII => plist compiler